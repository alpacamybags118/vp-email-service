service: vp-service-backend
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x

functions:
  add-vp:
    handler: handler.AddVP
    environment:
      DYNAMO_TABLE_NAME: vpTable
    events:
      - http:
          path: vp
          method: put
          cors: true
  get-vps:
    handler: handler.GetVps
    environment:
      DYNAMO_TABLE_NAME: vpTable
    events:
      - http:
          path: vp
          method: get
          cors: true
            
  send-email:
    handler: handler.SendEmail
    environment:
      DYNAMO_TABLE_NAME: vpTable
    events:
      - sqs:
          arn: 
            Fn::GetAtt:
              - emailQueue
              - Arn

custom:
  serverless-offline:
    httpPort: 5000
    noPrependStageInUrl: true,
    corsAllowOrigin: '*'
    corsAllowHeaders: 'accept,content-type,x-api-key'
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      migrate: true
      docker: true
  serverless-offline-sqs:
    autoCreate: true
    apiVersion: '2012-11-05'
    endpoint: http://0.0.0.0:9324
    region: us-east-2
    accessKeyId: root
    secretAccessKey: root
    skipCacheInvalidation: false
  apiGwSqs:
    apiEndpoint: sendemail
    queueName: 
      Fn::GetAtt:
              - emailQueue
              - Name

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    inviteTemplate:
        Type: AWS::SES::Template
        Properties:
          Template:
            TemplateName: invite-template
            SubjectPart: Your Invite
            HtmlPart: "<h1>Hello {{name}},</h1><p>Thank you for taking the time to speak to us! Please use the following links to accept or reject the invite for our next meeting.</p> <p>Accept: {{accepturl}}</p><p>Reject: {{rejecturl}}</p>"
            TextPart: "Hello {{name}}Thank you for taking the time to speak to us! Please use the following links to accept or reject the invite for our next meeting. Accept: {{accepturl}} Reject: {{rejecturl}}"
    emailQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: emailQueue
    # sendEmailResource:
    #   Type: AWS::ApiGateway::Resource
    #   Properties:
    #     ParentId: { "Fn::GetAtt": [{"Ref": "ApiGatewayRestApi"}, "RootResourceId"] }
    #     PathPart: sendemail
    #     RestApiId: {"Ref": "ApiGatewayRestApi"}
    # sendEmailMethod:
    #   Type: AWS::ApiGateway::Method
    #   Properties:
    #     RestApiId: {"Ref": "ApiGatewayRestApi"}
    #     HttpMethod: POST
    #     ResourceId: { "Fn::GetAtt": [{"Ref": "sendEmailResource"}, "Id"] }
    vpTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: vpTable
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
          - AttributeName: name
            KeyType: RANGE
        ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1


plugins:
  - serverless-plugin-typescript
  - serverless-offline-sqs
  - serverless-offline


